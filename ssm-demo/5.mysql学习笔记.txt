mysql 事务：
1.开启：BEGIN或START TRANSACTION，关闭：set autocommit=0;
2.原子性（全部成功或失败），一致性(事务前后数据库状态一致)，隔离性，持久性（结果写入磁盘）。
    隔离性:事务之间不会相互影响。
    	由锁机制和MVCC机制来实现的
    	MVCC：优化读写性能（读不加锁、读写不冲突）
3.丢失更新，脏读，不可重复读，幻读。
4.四种隔离级别。

mysql锁相关：
1.粒度：库，表，行。表级锁力度大，加锁快，并发低。行级锁粒度小，并发高，加锁慢，容易出现死锁。
         表：
         MDL锁：元数据锁，表级锁，操作表时要求被自动添加，如果不能获取锁则被阻塞。
         增删改查加MDL读锁，读锁件不互斥。在变更表结构的时候加写锁，写锁和所有锁互斥。
          SessionC获取MDL锁一旦被阻塞，其他Session获取MDL锁时也会被阻塞。
          为了提升全表更新时的性能，InnoDB实现了意向锁，IS（意向共享锁） IX（意向排他锁），属于表级锁，
          在加行级锁前必须先申请对应的意向锁，这样在更新时无需检查是否存在行级锁。

            行：
          行级锁在执行update,insert,delete 会被自动添加,select 不会被自动添加但可以手工添加：
            select * from userdata where id=1 lock in share mode; 添加共享锁。
            select * from userdata where id=1 for update; 添加排他锁。


2.功能：共享读锁，排他写锁。共享读锁，可重复加，任何事务可读不可写;排他写锁只能独占。
         读写锁都是行级别的，InnoDB通过索引项添加锁，如果查询语句中没有索引，相当于添加表锁。
         InnoDB行锁：Record Lock（索引项）,
                     Gap Lock 对第一条前的间隙，最后一条记录后的间隙加锁。
                     Next-Key Lock:前两种的结合，对记录前面的间隙加锁。

3.实现方式：悲观锁和乐观锁。
4.连接命令：mysql -h localhost -P 3306 -u root -p 123

sql相关：
1.truncate  table 表名，是删除表后重建表，自增属性被重置，delete则不会。
2.limit 不是sql92标准，而是Mysql独有的语法，是实现物理分页的一种方式。
    select * from userdata limit 5,10; 代表从第5条记录开始（包含第5条）向后查10条。初始值为0。
    用select * from userdata where id>15000 limit 1000; 这种方式比纯limit 15000,1000 这种方式快。
select * from userdata limit 2 offset 1  是从1条开始（包括第1条，查询两条）

3.交叉连接：from a,b; from a cross join b;
   内连接：from a,b where a.id=b.id ; from a inner join b on a.id=b.id;
    外连接：left join ;left outer join ;
                   right join;right outer join;
                    full join;full outer join;
     借鉴sql执行顺序：先进行笛卡尔积，然后on筛选，然后哪边的连接就把哪边的表剩余的元素补充进去作为主表，从表信息为null。

4.mysql 复合索引有最左优先原则，索引最左第一个字段必须出现在sql中，这个索引才会生效。

